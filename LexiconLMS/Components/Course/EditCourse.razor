@page "/courses/edit/{id:int}"
@inject IHttpService HttpService
@inject NavigationManager NavigationManager

<h3>Edit Course</h3>
<div class="row">
    <div class="col-sm-8 col-xl-6">
        <div class="card">
            <div class="card-body">
                <EditForm Model="Model" OnValidSubmit="Submit">
                    <div class="mb-3">
                        <label for="name">Name</label>
                        <input type="text" @bind="Model.Name" class="form-control" id="name" />
                    </div>
                    <div class="mb-3">
                        <label for="description">Description</label>
                        <textarea @bind="Model.Description" class="form-control" id="description"></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="startDate">Start Date</label>
                        <input type="date" @bind="Model.StartDate" class="form-control" id="startDate" />
                    </div>
                    <div class="mb-3">
                        <label for="endDate">End Date</label>
                        <input type="date" @bind="Model.EndDate" class="form-control" id="endDate" />
                    </div>
                    <button type="submit" class="btn btn-primary">Save</button>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    private CourseUpdateModel Model = new();

    protected override async Task OnInitializedAsync()
    {
        var course = await HttpService.GetAsync<CourseTrimModel>($"{Endpoints.Courses}/{Id}");
        if (course != null)
        {
            Model.Name = course.Name;
            Model.Description = course.Description;
            Model.StartDate = course.StartDate;
            Model.EndDate = course.EndDate;
        }
    }

    private async Task Submit()
    {
        await HttpService.PutAsync($"{Endpoints.Courses}/{Id}", Model);
        NavigationManager.NavigateTo("/teachers");
    }
}

